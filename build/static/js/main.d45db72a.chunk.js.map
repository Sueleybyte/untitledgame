{"version":3,"sources":["ShipControls.js","audio/index.js","store.js","Connection.js","3d/Effects.js","3d/Enemies.js","3d/Explosions.js","Hud.js","3d/Particles.js","3d/Planets.js","3d/Rocks.js","3d/Ship.js","index.js","audio/explosion.mp3","audio/click.mp3","audio/engine2.mp3","audio/engine.mp3","audio/warp.mp3","audio/laser.mp3","images/earth.jpg"],"names":["ShipControls","player","mouseRelative","actions","this","scope","keys","SPACE","LEFT","UP","RIGHT","BOTTOM","domElement","document","isAlive","locked","spawned","position","copy","THREE","playerName","update","translateZ","euler","setFromQuaternion","quaternion","y","map","x","Math","max","PI_2","min","setFromEuler","PI","inMin","inMax","outMin","outMax","window","addEventListener","event","keyCode","keycode","isConnected","spawn","valid","substring","length","updateName","String","fromCharCode","prototype","Object","create","constructor","defineProperties","mp3","explosion","explosionAudio","zap","Audio","zapAudio","engine","engineAudio","engine2","engine2Audio","warp","warpAudio","click","clickAudio","guid","set","get","cancelLaserTO","cancelExplosionTO","undefined","box","socket","io","sound","camera","connected","points","distance","health","lasers","explosions","enemies","mutation","t","shipRotation","shipPosition","worldPosition","startTime","Date","now","socketId","scale","fov","hits","looptime","binormal","normal","clock","mouse","dummy","ray","init","start","toggleSound","addEffect","a","round","distanceTo","killPlayer","time","e","filter","test","l","hitPlayer","emit","random","state","clearTimeout","setTimeout","shoot","playAudio","audio","addPlayer","id","console","log","hit","size","item","spawnPlayer","removePlayer","updatePlayer","data","updateEnemies","connect","updateMouse","clientX","clientY","innerWidth","innerHeight","expandByScalar","result","intersectBox","origin","useStore","api","volume","loop","getState","currentTime","play","pause","Connection","rotation","on","players","key","useEffect","i","setInterval","clearInterval","Effects","composer","useRef","useThree","scene","gl","current","setSize","width","height","useFrame","render","children","args","attachArray","ref","extend","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","FilmPass","GlitchPass","geometry","lightgreen","laserMaterial","color","Enemies","Drone","laserGroup","gltf","useLoader","GLTFLoader","exhaust","laserLight","main","group","z","sin","getElapsedTime","visible","intensity","material","name","attach","__$","make","speed","React","createRef","Array","fill","normalize","multiplyScalar","Explosions","Explosion","particles","useMemo","forEach","type","mesh","vec","add","updateMatrix","setMatrixAt","matrix","opacity","instanceMatrix","needsUpdate","index","frustumCulled","fog","transparent","Hud","toggle","offline","Offline","LowerLeft","Global","Wasted","Title","UpperLeft","onClick","UpperRight","href","base","css","styled","div","createGlobalStyle","Particles","count","instancedMesh","theta","phi","acos","cos","Planets","earthImg","texture","roughness","memo","r","offset","emissive","metalness","hotpink","crossMaterial","direction","Ship","cross","target","getWorldPosition","getWorldDirection","negate","renderOrder","Controls","controls","ReactDOM","near","far","onCreated","gammaInput","toneMapping","setClearColor","onPointerMove","fallback","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d45db72a.chunk.js","sourcesContent":["import * as THREE from 'three'\n\nconst ShipControls = function(player, mouseRelative, actions) {\n  this.player = player\n  const scope = this\n  this.keys = { SPACE: 32, LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 }\n\n  this.domElement = document\n\n  this.mouseRelative = mouseRelative\n  this.isAlive = false\n  this.locked = false\n  this.spawned = false\n  this.player.position.copy(new THREE.Vector3(0, 0, 1000))\n  this.playerName = ''\n\n  this.update = function() {\n    if (scope.isAlive) {\n      //if (!scope.locked) {\n      this.player.translateZ(-1.0)\n      euler.setFromQuaternion(scope.player.quaternion)\n\n      euler.y += map(scope.mouseRelative.x, -0.5, 0.5, 0.03, -0.03)\n      euler.x += map(scope.mouseRelative.y, -0.5, 0.5, 0.03, -0.03)\n\n      euler.x = Math.max(-PI_2, Math.min(PI_2, euler.x))\n\n      scope.player.quaternion.setFromEuler(euler)\n    }\n  }\n\n  function handleKeyDown(event) {\n    if (scope.isAlive) {\n      switch (event.keyCode) {\n        case scope.keys.SPACE:\n          scope.locked = !scope.locked\n          break\n        default:\n          break\n      }\n    } else {\n      if (scope.spawned) return\n\n      const keycode = event.keyCode\n\n      if (keycode === 13) {\n        if (!actions.isConnected()) {\n          return\n        }\n\n        scope.spawned = true\n        actions.spawn(true)\n        scope.isAlive = true\n        //window.removeEventListener('keydown', handleKeyDown, false)\n      } else {\n        const valid =\n          (keycode > 47 && keycode < 58) || // number keys\n          (keycode > 64 && keycode < 91) || // letter keys\n          (keycode > 95 && keycode < 112) || // numpad keys\n          (keycode > 185 && keycode < 193) || // ;=,-./` (in order)\n          (keycode > 218 && keycode < 223) // [\\]' (in order)\n        if (keycode === 8) {\n          scope.playerName = scope.playerName.substring(0, Math.max(0, scope.playerName.length - 1))\n          actions.updateName(scope.playerName)\n        } else if (valid) {\n          scope.playerName = scope.playerName + String.fromCharCode(keycode)\n          actions.updateName(scope.playerName)\n        }\n      }\n    }\n  }\n\n  const euler = new THREE.Euler(0, 0, 0, 'YXZ')\n\n  const PI_2 = Math.PI / 2\n\n  function map(x, inMin, inMax, outMin, outMax) {\n    return ((x - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  }\n  window.addEventListener('keydown', handleKeyDown, false)\n}\n\nShipControls.prototype = Object.create(THREE.EventDispatcher.prototype)\nShipControls.prototype.constructor = ShipControls\n\nObject.defineProperties(ShipControls.prototype, {})\nexport { ShipControls }\n","import clickAudio from './click.mp3'\nimport engine2Audio from './engine2.mp3'\nimport engineAudio from './engine.mp3'\nimport explosionAudio from './explosion.mp3'\nimport warpAudio from './warp.mp3'\nimport zapAudio from './laser.mp3'\n\nconst mp3 = { explosion: explosionAudio }\n\nconst zap = new Audio(zapAudio)\nconst engine = new Audio(engineAudio)\nconst engine2 = new Audio(engine2Audio)\nconst warp = new Audio(warpAudio)\nconst click = new Audio(clickAudio)\nconst explosion = new Audio(explosionAudio)\n\nexport { zap, engine, engine2, warp, click, explosion, mp3 }\n","import * as THREE from 'three'\nimport * as audio from './audio'\nimport { addEffect } from 'react-three-fiber'\nimport create from 'zustand'\nimport io from 'socket.io-client'\n\nlet guid = 1\n\nconst [useStore, api] = create((set, get) => {\n  let cancelLaserTO\n  let cancelExplosionTO = undefined\n  const box = new THREE.Box3()\n  const socket = io(':5000')\n\n  return {\n    sound: false,\n    camera: undefined,\n    connected: false,\n    playerName: 'Type your name',\n    points: 0,\n    distance: 0,\n    health: 100,\n    lasers: [],\n    explosions: [],\n    socket,\n    isAlive: false,\n    spawned: false,\n\n    enemies: [],\n\n    mutation: {\n      t: 0,\n      player: new THREE.Object3D(),\n      shipRotation: new THREE.Euler(0, 0, 0, 'YXZ'),\n      shipPosition: new THREE.Vector3(),\n      worldPosition: new THREE.Vector3(),\n      startTime: Date.now(),\n      socketId: 'offline',\n\n      scale: 1,\n      fov: 70,\n      hits: false,\n      looptime: 40 * 1000,\n      binormal: new THREE.Vector3(),\n      normal: new THREE.Vector3(),\n      clock: new THREE.Clock(false),\n      mouse: new THREE.Vector2(-250, 50),\n      mouseRelative: new THREE.Vector2(0, 0),\n\n      // Re-usable objects\n      dummy: new THREE.Object3D(),\n      ray: new THREE.Ray(),\n      box: new THREE.Box3()\n    },\n\n    actions: {\n      init(camera) {\n        const { mutation, actions } = get()\n\n        set({ camera })\n        mutation.clock.start()\n        actions.toggleSound(get().sound)\n\n        addEffect(() => {\n          const { enemies, mutation } = get()\n\n          const a = new THREE.Vector3(0, 0, 0)\n          const distance = Math.round(a.distanceTo(mutation.player.position))\n          if (distance < 530) {\n            actions.killPlayer()\n          }\n\n          set({ distance })\n\n          const time = Date.now()\n\n          // test for hits\n          const e = enemies.filter(actions.test)\n          mutation.hits = e.length\n          const lasers = get().lasers.filter(l => l.socketId === mutation.socketId)\n          //if (lasers.length > 0) console.log(e)\n          if (mutation.hits && lasers.length && time - lasers[lasers.length - 1].time < 100) {\n            actions.hitPlayer(e[0].socketId)\n            socket.emit('player-hit', e[0].socketId)\n\n            const update = { ...e[0], time: Date.now(), guid: guid++, scale: 1 + Math.random() * 2.5, position: e[0].worldPosition }\n            set(state => ({ explosions: [...state.explosions, update] }))\n            clearTimeout(cancelExplosionTO)\n            cancelExplosionTO = setTimeout(\n              () =>\n                set(state => ({\n                  explosions: state.explosions.filter(({ time }) => Date.now() - time <= 1000)\n                })),\n              1000\n            )\n            set(state => ({\n              points: state.points + 1\n            }))\n          }\n        })\n      },\n      shoot(socketId) {\n        if (!get().spawned) return\n\n        if (!get().isAlive) {\n          get().actions.spawn(true)\n          return\n        }\n        set(state => ({ lasers: [...state.lasers, { time: Date.now(), socketId }] }))\n        clearTimeout(cancelLaserTO)\n        cancelLaserTO = setTimeout(\n          () =>\n            set(state => ({\n              lasers: state.lasers.filter(t => Date.now() - t <= 1000)\n            })),\n          1000\n        )\n        playAudio(audio.zap, 0.5)\n      },\n      addPlayer(id) {\n        console.log('adding player')\n        console.log(id)\n        set(state => ({\n          enemies: [...state.enemies, { socketId: id, hit: new THREE.Vector3(), size: 10, scale: 1, isAlive: false }]\n        }))\n        console.log(get().enemies)\n      },\n      killPlayer() {\n        set({ isAlive: false })\n      },\n      hitPlayer(id) {\n        if (id === socket.id) {\n          get().actions.killPlayer()\n          return\n        }\n        set(state => ({\n          enemies: state.enemies.map(item => {\n            if (item.socketId !== id) {\n              return item\n            }\n\n            return {\n              ...item,\n              ...{ isAlive: false }\n            }\n          })\n        }))\n      },\n      spawnPlayer(id) {\n        //console.log('spawnPlayer')\n        //console.log(id)\n        //console.log(get().enemies)\n        set(state => ({\n          enemies: state.enemies.map(item => {\n            if (item.socketId !== id) {\n              return item\n            }\n\n            return {\n              ...item,\n              ...{ isAlive: true }\n            }\n          })\n        }))\n        //console.log(get().enemies)\n      },\n      removePlayer(id) {\n        //console.log('removing player')\n        //console.log(id)\n        set(state => ({\n          enemies: state.enemies.filter(e => e.socketId !== id)\n        }))\n        //console.log(get().enemies)\n      },\n      updatePlayer(data) {\n        set(state => ({ enemies: updateEnemies(state.enemies, data) }))\n      },\n      toggleSound(sound = !get().sound) {\n        set({ sound })\n        playAudio(audio.engine, 1, true)\n        playAudio(audio.engine2, 0.3, true)\n      },\n      spawn(isAlive) {\n        if (get().isAlive) return\n        get().mutation.player.position.copy(new THREE.Vector3(0, 0, 1000))\n        set({ isAlive })\n        set({ spawned: true })\n        socket.emit('player-spawn')\n      },\n      updateName(playerName) {\n        set({ playerName })\n      },\n      isConnected() {\n        return get().connected\n      },\n      connect(connected) {\n        set({ connected })\n      },\n      updateMouse({ clientX: x, clientY: y }) {\n        get().mutation.mouse.set(x - window.innerWidth / 2, y - window.innerHeight / 2)\n        get().mutation.mouseRelative.set(-0.5 + x / window.innerWidth, -0.5 + y / window.innerHeight)\n      },\n      test(data) {\n        if (data.isAlive && data.worldPosition) {\n          box.min.copy(data.worldPosition)\n          box.max.copy(data.worldPosition)\n          box.expandByScalar(data.size * data.scale)\n          data.hit.set(10000, 10000, 10000)\n          const result = get().mutation.ray.intersectBox(box, data.hit)\n          data.distance = get().mutation.ray.origin.distanceTo(data.hit)\n          return result\n        }\n        return false\n      }\n    }\n  }\n})\n\nfunction updateEnemies(enemies, data) {\n  return enemies.map(item => {\n    if (item.socketId !== data.socketId) {\n      return item\n    }\n\n    return {\n      ...item,\n      ...data\n    }\n  })\n}\n\nfunction playAudio(audio, volume = 1, loop = false) {\n  if (api.getState().sound) {\n    audio.currentTime = 0\n    audio.volume = volume\n    audio.loop = loop\n    audio.play()\n  } else audio.pause()\n}\n\nexport default useStore\nexport { audio, playAudio }\n","import * as THREE from 'three'\nimport React, { useEffect } from 'react'\nimport useStore from './store'\n\nexport default function Connection() {\n  const socket = useStore(state => state.socket)\n  const mutation = useStore(state => state.mutation)\n  const actions = useStore(state => state.actions)\n\n  console.log('connection')\n\n  socket.on('connect', () => {\n    console.log('> Connected to server')\n    actions.connect(true)\n  })\n\n  socket.on('disconnect', () => {\n    console.log('> Disconnected')\n    actions.connect(false)\n  })\n\n  socket.on('bootstrap', data => {\n    actions.connect(true)\n    console.log('> bootstrap')\n    console.log(data.players)\n    //actions.setSocketId(data.socketId)\n    mutation.socketId = data.socketId\n    for (const key of Object.keys(data.players)) {\n      actions.addPlayer(key)\n    }\n  })\n\n  socket.on('player-add', data => {\n    console.log('player-add')\n    console.log(data)\n    actions.addPlayer(data)\n  })\n\n  socket.on('player-hit', data => {\n    console.log('player-hit')\n    console.log(data)\n    actions.hitPlayer(data)\n  })\n\n  socket.on('player-spawn', data => {\n    console.log('player-spawn')\n    console.log(data)\n    actions.spawnPlayer(data)\n  })\n\n  socket.on('player-remove', data => {\n    actions.removePlayer(data)\n  })\n\n  socket.on('player-update', data => {\n    actions.updatePlayer(data)\n  })\n\n  socket.on('player-shoot', data => {\n    actions.shoot(data)\n  })\n\n  function update() {\n    socket.emit('player-update', {\n      position: mutation.player.position,\n      rotation: mutation.player.rotation,\n      shipRotation: mutation.shipRotation,\n      shipPosition: mutation.shipPosition,\n      worldPosition: mutation.worldPosition\n    })\n  }\n\n  useEffect(() => {\n    const i = setInterval(update, 50)\n    return () => clearInterval(i)\n  })\n\n  return <></>\n}\n","import { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass'\nimport { GlitchPass } from 'three/examples/jsm/postprocessing/GlitchPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { extend, useFrame, useThree } from 'react-three-fiber'\nimport React, { useEffect, useRef } from 'react'\nimport useStore from '../store'\n\nextend({ EffectComposer, ShaderPass, RenderPass, UnrealBloomPass, FilmPass, GlitchPass })\n\nexport default function Effects() {\n  const composer = useRef()\n  const { scene, gl, size, camera } = useThree()\n  const isAlive = useStore(state => state.isAlive)\n  const spawned = useStore(state => state.spawned)\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  useFrame(() => {\n    composer.current.render()\n  }, 2)\n  // bug while switching effects?\n  const children =\n    false && spawned ? (\n      <>\n        <glitchPass args={[undefined]} attachArray=\"passes\" />\n      </>\n    ) : (\n      <>\n        <unrealBloomPass args={[undefined, 1.6, 1, 0]} attachArray=\"passes\" />\n        <filmPass args={[0.05, 0.5, 1500, false]} attachArray=\"passes\" />\n      </>\n    )\n\n  return (\n    <effectComposer args={[gl]} ref={composer}>\n      <renderPass attachArray=\"passes\" camera={camera} scene={scene} />\n      {children}\n    </effectComposer>\n  )\n}\n","import * as THREE from 'three'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { useFrame, useLoader } from 'react-three-fiber'\nimport React, { useEffect, useRef } from 'react'\nimport useStore from '../store'\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 40)\nconst lightgreen = new THREE.Color('lightgreen')\nconst laserMaterial = new THREE.MeshBasicMaterial({ color: lightgreen })\n\nexport default function Enemies() {\n  const enemies = useStore(state => state.enemies)\n  return enemies.map((data, i) => <Drone {...data} key={i} />)\n}\n\nfunction Drone(data) {\n  const { clock } = useStore(state => state.mutation)\n  const lasers = useStore(state => state.lasers).filter(l => l.socketId === data.socketId)\n  const laserGroup = useRef()\n  const gltf = useLoader(GLTFLoader, '/ship.gltf')\n  const exhaust = useRef()\n  const laserLight = useRef()\n  const main = useRef()\n  const group = useRef()\n\n  useEffect(() => {\n    if (data.position) {\n      group.current.position.copy(data.position)\n      group.current.rotation.copy(data.rotation)\n      main.current.position.copy(data.shipPosition)\n      main.current.rotation.copy(data.shipRotation)\n    }\n  }, [data])\n\n  useFrame(() => {\n    //group.current.translateZ(-1.0)\n    for (let i = 0; i < lasers.length; i++) {\n      const group = laserGroup.current.children[i]\n      group.position.z -= 20\n    }\n    exhaust.current.scale.x = 1 + Math.sin(clock.getElapsedTime() * 200)\n    exhaust.current.scale.y = 1 + Math.sin(clock.getElapsedTime() * 200)\n  })\n\n  return (\n    <group ref={group} visible={data.isAlive}>\n      <pointLight color=\"indianred\" distance={400} intensity={5} position={[0, 100, -420]} />\n      <group position={[0, 0, -50]}>\n        <group ref={main}>\n          <group scale={[3.5, 3.5, 3.5]}>\n            <pointLight color=\"lightgreen\" distance={100} intensity={0} position={[0, 0, -20]} ref={laserLight} />\n            <group ref={laserGroup}>\n              {lasers.map((t, i) => (\n                <group key={i}>\n                  <mesh geometry={geometry} material={laserMaterial} position={[-2.8, 0, -0.8]} />\n                  <mesh geometry={geometry} material={laserMaterial} position={[2.8, 0, -0.8]} />\n                </group>\n              ))}\n            </group>\n            <group rotation={[Math.PI / 2, Math.PI, 0]}>\n              <mesh name=\"Renault_(S,_T1)_0\">\n                <bufferGeometry attach=\"geometry\" {...gltf.__$[5].geometry} />\n                <meshStandardMaterial attach=\"material\" color=\"#070707\" />\n              </mesh>\n              <mesh name=\"Renault_(S,_T1)_1\">\n                <bufferGeometry attach=\"geometry\" {...gltf.__$[6].geometry} />\n                <meshStandardMaterial attach=\"material\" color=\"black\" />\n              </mesh>\n              <mesh name=\"Renault_(S,_T1)_2\">\n                <bufferGeometry attach=\"geometry\" {...gltf.__$[7].geometry} />\n                <meshStandardMaterial attach=\"material\" color=\"#070707\" />\n              </mesh>\n              <mesh name=\"Renault_(S,_T1)_3\">\n                <bufferGeometry attach=\"geometry\" {...gltf.__$[8].geometry} />\n                <meshBasicMaterial attach=\"material\" color=\"lightblue\" />\n              </mesh>\n              <mesh name=\"Renault_(S,_T1)_4\">\n                <bufferGeometry attach=\"geometry\" {...gltf.__$[9].geometry} />\n                <meshBasicMaterial attach=\"material\" color=\"white\" />\n              </mesh>\n              <mesh name=\"Renault_(S,_T1)_5\">\n                <bufferGeometry attach=\"geometry\" {...gltf.__$[10].geometry} />\n                <meshBasicMaterial attach=\"material\" color=\"teal\" />\n              </mesh>\n            </group>\n          </group>\n          <mesh position={[0, 1, 30]} ref={exhaust} scale={[1, 1, 30]}>\n            <dodecahedronBufferGeometry args={[1.5, 0]} attach=\"geometry\" />\n            <meshBasicMaterial attach=\"material\" color=\"lightblue\" />\n          </mesh>\n        </group>\n      </group>\n    </group>\n  )\n}\n","import * as THREE from 'three'\nimport { useFrame } from 'react-three-fiber'\nimport React, { useEffect, useMemo, useRef } from 'react'\nimport useStore, { audio, playAudio } from '../store'\n\nfunction make(color, speed) {\n  return {\n    ref: React.createRef(),\n    color,\n    data: new Array(20)\n      .fill()\n      .map(() => [new THREE.Vector3(), new THREE.Vector3(-1 + Math.random() * 2, -1 + Math.random() * 2, -1 + Math.random() * 2).normalize().multiplyScalar(speed * 0.75)])\n  }\n}\n\nexport default function Explosions() {\n  const explosions = useStore(state => state.explosions)\n  return explosions.map(({ guid, position, scale }) => <Explosion key={guid} position={position} scale={scale * 0.75} />)\n}\n\nfunction Explosion({ position, scale }) {\n  const group = useRef()\n  const { dummy } = useStore(state => state.mutation)\n  const particles = useMemo(() => [make('white', 0.8), make('orange', 0.6)], [])\n\n  useEffect(() => void playAudio(new Audio(audio.mp3.explosion), 0.5), [])\n\n  useFrame(() => {\n    particles.forEach(({ data }, type) => {\n      const mesh = group.current.children[type]\n      data.forEach(([vec, normal], i) => {\n        vec.add(normal)\n        dummy.position.copy(vec)\n        dummy.updateMatrix()\n        mesh.setMatrixAt(i, dummy.matrix)\n      })\n      mesh.material.opacity -= 0.025\n      mesh.instanceMatrix.needsUpdate = true\n    })\n  })\n\n  return (\n    <group position={position} ref={group} scale={[scale, scale, scale]}>\n      {particles.map(({ color, data }, index) => (\n        <instancedMesh args={[null, null, data.length]} frustumCulled={false} key={index}>\n          <dodecahedronBufferGeometry args={[10, 0]} attach=\"geometry\" />\n          <meshBasicMaterial attach=\"material\" color={color} fog={false} opacity={1} transparent />\n        </instancedMesh>\n      ))}\n    </group>\n  )\n}\n","import React from 'react'\nimport styled, { createGlobalStyle, css } from 'styled-components'\nimport useStore from './store'\n\nexport default function Hud() {\n  const points = useStore(state => state.points)\n  const distance = useStore(state => state.distance)\n  const playerName = useStore(state => state.playerName)\n  const isAlive = useStore(state => state.isAlive)\n  const spawned = useStore(state => state.spawned)\n  const sound = useStore(state => state.sound)\n  const connected = useStore(state => state.connected)\n  const toggle = useStore(state => state.actions.toggleSound)\n  let offline = <></>\n\n  if (!connected) {\n    offline = (\n      <Offline>\n        <h1>Offline</h1>\n      </Offline>\n    )\n  }\n\n  if (spawned)\n    if (isAlive) {\n      return (\n        <>\n          <LowerLeft>\n            <h2>{distance}</h2>\n            <h1>{points}</h1>\n          </LowerLeft>\n          {offline}\n          <Global />\n        </>\n      )\n    } else {\n      return (\n        <>\n          <Wasted>\n            <h2>Wasted</h2>\n          </Wasted>\n          {offline}\n          <Global />\n        </>\n      )\n    }\n  else {\n    return (\n      <>\n        <Title>Cosmo Revolution</Title>\n        <LowerLeft>\n          <h2>{playerName}</h2>\n        </LowerLeft>\n        {offline}\n        <UpperLeft onClick={() => toggle()}>\n          sound\n          <br />\n          {sound ? 'off' : 'on'}\n        </UpperLeft>\n        <UpperRight>\n          <a href=\"https://codesandbox.io/s/react-three-fiber-untitled-game-4pp5r\">original source</a>\n          <br />\n          <a href=\"https://twitter.com/0xca0a\">original creator twitter</a>\n          <br />\n          <a href=\"https://github.com/valdirSalgueiro/untitledgame\">github</a>\n        </UpperRight>\n        <Global />\n      </>\n    )\n  }\n}\n\nconst base = css`\n  font-family: 'Teko', sans-serif;\n  position: absolute;\n  text-transform: uppercase;\n  font-weight: 900;\n  font-variant-numeric: slashed-zero tabular-nums;\n  line-height: 1em;\n  pointer-events: none;\n  color: indianred;\n`\n\nconst Wasted = styled.div`\n  ${base}\n  text-align: center;\n  vertical-align: middle;\n  top: 200px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  filter: blur(0.5px);\n  color: rgb(207, 207, 257);\n  margin: 0;\n  font-size: 12em;\n  line-height: 1em;\n`\n\nconst Title = styled.div`\n  ${base}\n  text-align: center;\n  vertical-align: middle;\n  top: 200px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  filter: blur(0.5px);\n  color: rgb(207, 207, 257);\n  margin: 0;\n  font-size: 15em;\n  line-height: 1em;\n  text-shadow: 0px 0px 1px rgb(167, 167, 167), 0px 1px 1px rgb(167, 167, 167), 0px 2px 1px rgb(167, 167, 167), 1px 1px 1px rgb(167, 167, 167), 1px 2px 1px rgb(167, 167, 167),\n    1px 3px 1px rgb(167, 167, 167), 2px 2px 1px rgb(167, 167, 167), 2px 3px 1px rgb(167, 167, 167), 2px 4px 1px rgb(167, 167, 167), 1px 10px 30px rgba(0, 0, 0, 0.8),\n    1px 10px 70px rgba(0, 0, 0, 0.8), 0px 5px 5px rgba(0, 0, 0, 0.8), -5px 5px 20px rgba(0, 0, 0, 0.8), 5px 5px 20px rgba(0, 0, 0, 0.8), 1px 1px 120px rgba(255, 255, 255, 0.5);\n  ::after {\n    content: 'Cosmo Revolution';\n    position: absolute;\n    text-align: center;\n    vertical-align: middle;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n    text-shadow: 0px 0px 100px rgba(11, 124, 199, 0.5);\n    animation: cycle 10s linear infinite;\n  }\n  @keyframes cycle {\n    0% {\n      text-shadow: 0px 0px 100px rgba(11, 124, 199, 0.5);\n    }\n    20% {\n      text-shadow: 0px 0px 100px rgba(168, 11, 199, 0.5);\n    }\n    40% {\n      text-shadow: 0px 0px 100px rgba(11, 199, 96, 0.5);\n    }\n    60% {\n      text-shadow: 0px 0px 100px rgba(199, 11, 11, 0.5);\n    }\n    80% {\n      text-shadow: 0px 0px 100px rgba(199, 96, 11, 0.5);\n    }\n  }\n`\nconst Global = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  html,\n  body,\n  #root {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    user-select: none;\n    overflow: hidden;\n  }\n\n  #root {\n    overflow: auto;\n    padding: 0px;\n  }\n\n  body {\n    position: fixed;\n    overflow: hidden;\n    overscroll-behavior-y: none;\n    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif;\n    color: black;\n    background: white;\n  }\n`\nconst Offline = styled.div`\n  ${base}\n  text-align: center;\n  vertical-align: middle;\n  top: 400px;\n  width: 100%;\n  height: 100%;\n  color: yellow;\n  & > h1 {\n    margin: 0;\n    font-size: 14em;\n    line-height: 1em;\n  }\n  & > h2 {\n    margin: 0;\n    font-size: 4em;\n    line-height: 1em;\n  }\n  @media only screen and (max-width: 900px) {\n    bottom: 30px;\n    & > h1 {\n      font-size: 6em !important;\n    }\n    & > h2 {\n      font-size: 3em !important;\n    }\n  }\n`\n\nconst LowerLeft = styled.div`\n  ${base}\n  bottom: 5px;\n  left: 50px;\n  transform: skew(-5deg, -10deg);\n  width: 200px;\n  & > h1 {\n    margin: 0;\n    font-size: 14em;\n    line-height: 1em;\n  }\n  & > h2 {\n    margin: 0;\n    font-size: 4em;\n    line-height: 1em;\n  }\n  @media only screen and (max-width: 900px) {\n    bottom: 30px;\n    & > h1 {\n      font-size: 6em !important;\n    }\n    & > h2 {\n      font-size: 3em !important;\n    }\n  }\n`\n\nconst UpperLeft = styled.div`\n  ${base}\n  top: 40px;\n  left: 50px;\n  font-size: 2em;\n  transform: skew(5deg, 10deg);\n  pointer-events: all;\n  cursor: pointer;\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n\nconst UpperRight = styled.div`\n  ${base}\n  text-align: right;\n  top: 40px;\n  right: 50px;\n  font-size: 2em;\n  transform: skew(-5deg, -10deg);\n  pointer-events: all;\n  cursor: pointer;\n  & > a {\n    color: indianred;\n    text-decoration: none;\n  }\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n","import React, { useEffect, useRef } from 'react'\n\nimport useStore from '../store'\n\nexport default function Particles({ count = 3000 }) {\n  const instancedMesh = useRef()\n  const { dummy } = useStore(state => state.mutation)\n\n  useEffect(() => {\n    for (let i = 0; i < count; i++) {\n      const r = 500\n      const theta = 2 * Math.PI * Math.random()\n      const phi = Math.acos(2 * Math.random() - 1)\n      const x = r * Math.cos(theta) * Math.sin(phi) + (-200 + Math.random() * 400)\n      const y = r * Math.sin(theta) * Math.sin(phi) + (-200 + Math.random() * 400)\n      const z = r * Math.cos(phi) + 1000\n      const scale = 0.5 + Math.random() * 0.5\n      dummy.position.copy({ x, y, z })\n      dummy.scale.set(scale, scale, scale)\n      dummy.rotation.set(Math.sin(Math.random()) * Math.PI, Math.sin(Math.random()) * Math.PI, Math.cos(Math.random()) * Math.PI)\n      dummy.updateMatrix()\n      instancedMesh.current.setMatrixAt(i, dummy.matrix)\n    }\n    instancedMesh.current.instanceMatrix.needsUpdate = true\n  }, [count, dummy])\n\n  return (\n    <instancedMesh args={[null, null, count]} frustumCulled={false} ref={instancedMesh}>\n      <coneBufferGeometry args={[2, 2, 3]} attach=\"geometry\" />\n      <meshStandardMaterial attach=\"material\" color=\"#606060\" />\n    </instancedMesh>\n  )\n}\n","import * as THREE from 'three'\nimport { useLoader } from 'react-three-fiber'\nimport React, { useRef } from 'react'\nimport earthImg from '../images/earth.jpg'\n\nexport default function Planets() {\n  const ref = useRef()\n  const [texture] = useLoader(THREE.TextureLoader, [earthImg])\n  return (\n    <group position={[0, 0, 0]} ref={ref} scale={[100, 100, 100]}>\n      <mesh>\n        <sphereBufferGeometry args={[5, 32, 32]} attach=\"geometry\" />\n        <meshStandardMaterial attach=\"material\" fog={false} map={texture} roughness={1} />\n      </mesh>\n      <pointLight distance={1000} intensity={6} position={[-5, -5, -5]} />\n      <mesh position={[-30, -10, -60]}>\n        <sphereBufferGeometry args={[4, 32, 32]} attach=\"geometry\" />\n        <meshBasicMaterial attach=\"material\" color=\"#FFFF99\" fog={false} />\n        <pointLight color=\"white\" distance={6100} intensity={50} />\n      </mesh>\n    </group>\n  )\n}\n","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { useFrame, useLoader } from 'react-three-fiber'\nimport React, { useRef } from 'react'\nimport useStore from '../store'\n\nexport default function Rocks() {\n  const gltf = useLoader(GLTFLoader, '/rock.gltf')\n  const rocks = useStore(state => state.rocks)\n  return rocks.map(data => <Rock data={data} gltf={gltf} key={data.guid} />)\n}\n\nconst Rock = React.memo(({ gltf, data }) => {\n  const ref = useRef()\n  const { clock } = useStore(state => state.mutation)\n  useFrame(() => {\n    const r = Math.cos((clock.getElapsedTime() / 2) * data.speed) * Math.PI\n    ref.current.rotation.set(r, r, r)\n  })\n  return (\n    <group position={data.offset} ref={ref} scale={[data.scale, data.scale, data.scale]}>\n      <object3D\n        position={[-0.016298329457640648, -0.012838120572268963, 0.24073271453380585]}\n        rotation={[3.0093872578726644, 0.27444228385461117, -0.22745113653772078]}\n        scale={[20, 20, 20]}\n      >\n        <mesh>\n          <bufferGeometry attach=\"geometry\" {...gltf.__$[7].geometry} />\n          <meshStandardMaterial attach=\"material\" {...gltf.__$[7].material} color=\"white\" emissive=\"black\" metalness={1} roughness={1} />\n        </mesh>\n      </object3D>\n    </group>\n  )\n})\n","import * as THREE from 'three'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { useFrame, useLoader, useThree } from 'react-three-fiber'\nimport React, { useRef } from 'react'\nimport useStore from '../store'\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 40)\nconst lightgreen = new THREE.Color('lightgreen')\nconst hotpink = new THREE.Color('hotpink')\nconst laserMaterial = new THREE.MeshBasicMaterial({ color: lightgreen })\nconst crossMaterial = new THREE.MeshBasicMaterial({ color: hotpink, fog: false })\nconst position = new THREE.Vector3()\nconst worldPosition = new THREE.Vector3()\nconst direction = new THREE.Vector3()\n\nexport default function Ship() {\n  const { camera } = useThree()\n  const gltf = useLoader(GLTFLoader, '/ship.gltf')\n  const mutation = useStore(state => state.mutation)\n  const isAlive = useStore(state => state.isAlive)\n  const { clock, mouse, ray } = mutation\n  const lasers = useStore(state => state.lasers).filter(l => l.socketId === mutation.socketId)\n  const main = useRef()\n  const laserGroup = useRef()\n  const laserLight = useRef()\n  const exhaust = useRef()\n  const cross = useRef()\n  const target = useRef()\n  const mesh = useRef()\n  const group = useRef()\n\n  useFrame(() => {\n    if (!isAlive) return\n    main.current.rotation.z += (-mouse.x / 500 - main.current.rotation.z) * 0.1\n    main.current.rotation.x += (-mouse.y / 1200 - main.current.rotation.x) * 0.1\n    main.current.rotation.y += (-mouse.x / 1200 - main.current.rotation.y) * 0.1\n    main.current.position.x += (mouse.x / 10 - main.current.position.x) * 0.1\n    main.current.position.y += (25 + -mouse.y / 10 - main.current.position.y) * 0.1\n    exhaust.current.scale.x = 1 + Math.sin(clock.getElapsedTime() * 200)\n    exhaust.current.scale.y = 1 + Math.sin(clock.getElapsedTime() * 200)\n\n    for (let i = 0; i < lasers.length; i++) {\n      const group = laserGroup.current.children[i]\n      group.position.z -= 20\n    }\n    laserLight.current.intensity += ((lasers.length && Date.now() - lasers[lasers.length - 1].time < 100 ? 20 : 0) - laserLight.current.intensity) * 0.3\n\n    // Get ships orientation and save it to the stores ray\n    main.current.getWorldPosition(position)\n    main.current.getWorldDirection(direction)\n    ray.origin.copy(position)\n    ray.direction.copy(direction.negate())\n\n    group.current.position.copy(mutation.player.position)\n    group.current.quaternion.copy(mutation.player.quaternion)\n\n    camera.position.copy(mutation.player.position)\n    camera.rotation.copy(mutation.player.rotation)\n    mesh.current.getWorldPosition(worldPosition)\n    mutation.shipPosition.copy(main.current.position)\n    mutation.shipRotation.copy(main.current.rotation)\n    mutation.worldPosition.copy(worldPosition)\n\n    // ...\n    crossMaterial.color = mutation.hits ? lightgreen : hotpink\n    cross.current.visible = !mutation.hits\n    target.current.visible = !!mutation.hits\n  })\n\n  return (\n    <group ref={group} visible={isAlive}>\n      <pointLight color=\"indianred\" distance={400} intensity={5} position={[0, 100, -420]} />\n      <group position={[0, 0, -50]}>\n        <group ref={main}>\n          <group scale={[3.5, 3.5, 3.5]}>\n            <group name=\"cross\" position={[0, 0, -300]} ref={cross}>\n              <mesh material={crossMaterial} renderOrder={1000}>\n                <boxBufferGeometry args={[20, 2, 2]} attach=\"geometry\" />\n              </mesh>\n              <mesh material={crossMaterial} renderOrder={1000}>\n                <boxBufferGeometry args={[2, 20, 2]} attach=\"geometry\" />\n              </mesh>\n            </group>\n            <group name=\"target\" position={[0, 0, -300]} ref={target}>\n              <mesh material={crossMaterial} position={[0, 20, 0]} renderOrder={1000}>\n                <boxBufferGeometry args={[40, 2, 2]} attach=\"geometry\" />\n              </mesh>\n              <mesh material={crossMaterial} position={[0, -20, 0]} renderOrder={1000}>\n                <boxBufferGeometry args={[40, 2, 2]} attach=\"geometry\" />\n              </mesh>\n              <mesh material={crossMaterial} position={[20, 0, 0]} renderOrder={1000}>\n                <boxBufferGeometry args={[2, 40, 2]} attach=\"geometry\" />\n              </mesh>\n              <mesh material={crossMaterial} position={[-20, 0, 0]} renderOrder={1000}>\n                <boxBufferGeometry args={[2, 40, 2]} attach=\"geometry\" />\n              </mesh>\n            </group>\n            <pointLight color=\"lightgreen\" distance={100} intensity={0} position={[0, 0, -20]} ref={laserLight} />\n            <group ref={laserGroup}>\n              {lasers.map((t, i) => (\n                <group key={i}>\n                  <mesh geometry={geometry} material={laserMaterial} position={[-2.8, 0, -0.8]} />\n                  <mesh geometry={geometry} material={laserMaterial} position={[2.8, 0, -0.8]} />\n                </group>\n              ))}\n            </group>\n            <group ref={mesh} rotation={[Math.PI / 2, Math.PI, 0]}>\n              <mesh name=\"Renault_(S,_T1)_0\">\n                <bufferGeometry attach=\"geometry\" {...gltf.__$[5].geometry} />\n                <meshStandardMaterial attach=\"material\" color=\"#070707\" />\n              </mesh>\n              <mesh name=\"Renault_(S,_T1)_1\">\n                <bufferGeometry attach=\"geometry\" {...gltf.__$[6].geometry} />\n                <meshStandardMaterial attach=\"material\" color=\"black\" />\n              </mesh>\n              <mesh name=\"Renault_(S,_T1)_2\">\n                <bufferGeometry attach=\"geometry\" {...gltf.__$[7].geometry} />\n                <meshStandardMaterial attach=\"material\" color=\"#070707\" />\n              </mesh>\n              <mesh name=\"Renault_(S,_T1)_3\">\n                <bufferGeometry attach=\"geometry\" {...gltf.__$[8].geometry} />\n                <meshBasicMaterial attach=\"material\" color=\"lightblue\" />\n              </mesh>\n              <mesh name=\"Renault_(S,_T1)_4\">\n                <bufferGeometry attach=\"geometry\" {...gltf.__$[9].geometry} />\n                <meshBasicMaterial attach=\"material\" color=\"white\" />\n              </mesh>\n              <mesh name=\"Renault_(S,_T1)_5\">\n                <bufferGeometry attach=\"geometry\" {...gltf.__$[10].geometry} />\n                <meshBasicMaterial attach=\"material\" color=\"teal\" />\n              </mesh>\n            </group>\n          </group>\n          <mesh position={[0, 1, 30]} ref={exhaust} scale={[1, 1, 30]}>\n            <dodecahedronBufferGeometry args={[1.5, 0]} attach=\"geometry\" />\n            <meshBasicMaterial attach=\"material\" color=\"lightblue\" />\n          </mesh>\n        </group>\n      </group>\n    </group>\n  )\n}\n","import * as THREE from 'three'\nimport { Canvas, extend, useFrame } from 'react-three-fiber'\nimport { ShipControls } from './ShipControls'\nimport Connection from './Connection'\nimport Effects from './3d/Effects'\nimport Enemies from './3d/Enemies'\nimport Explosions from './3d/Explosions'\nimport Hud from './Hud'\nimport Particles from './3d/Particles'\nimport Planets from './3d/Planets'\nimport React, { Suspense, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport Rocks from './3d/Rocks'\nimport Ship from './3d/Ship'\nimport Stars from './3d/Stars'\nimport useStore from './store'\n\nextend({ ShipControls })\n\nfunction Controls() {\n  const controls = useRef()\n  const { player, mouseRelative } = useStore(state => state.mutation)\n  const actions = useStore(state => state.actions)\n  useFrame(() => controls.current.update())\n  return <shipControls args={[player, mouseRelative, actions]} ref={controls} />\n}\n\nfunction App() {\n  const mutation = useStore(state => state.mutation)\n  const actions = useStore(state => state.actions)\n  const socket = useStore(state => state.socket)\n  return (\n    <>\n      <Canvas\n        camera={{ position: [0, 0, 2000], near: 0.01, far: 10000, ...mutation.fov }}\n        onClick={() => {\n          socket.emit('player-shoot')\n          actions.shoot(mutation.socketId)\n        }}\n        onCreated={({ gl, camera }) => {\n          actions.init(camera)\n          gl.gammaInput = true\n          gl.toneMapping = THREE.Uncharted2ToneMapping\n          gl.setClearColor(new THREE.Color('#020207'))\n        }}\n        onPointerMove={actions.updateMouse}\n      >\n        <fog args={['black', 100, 700]} attach=\"fog\" />\n        <ambientLight intensity={0.25} />\n        <Controls />\n        <Particles />\n        <Explosions />\n        <Suspense fallback={null}>\n          <Connection />\n          <Planets />\n          <Enemies />\n          <Ship />\n        </Suspense>\n        <Effects />\n      </Canvas>\n      <Hud />\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/explosion.5c5ce697.mp3\";","module.exports = __webpack_public_path__ + \"static/media/click.8d516cce.mp3\";","module.exports = __webpack_public_path__ + \"static/media/engine2.bdb08091.mp3\";","module.exports = __webpack_public_path__ + \"static/media/engine.e896d081.mp3\";","module.exports = __webpack_public_path__ + \"static/media/warp.5699f1c4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/laser.a97c8e67.mp3\";","module.exports = __webpack_public_path__ + \"static/media/earth.7cddb76f.jpg\";"],"sourceRoot":""}